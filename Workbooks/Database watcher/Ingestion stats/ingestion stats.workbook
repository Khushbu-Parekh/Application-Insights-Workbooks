{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "d06486e9-f3f2-4a04-a965-1623d756f79b",
            "version": "KqlParameterItem/1.0",
            "name": "adxClusterUri",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "value": ""
          },
          {
            "id": "dffea4e1-a3d7-475d-8d7c-03b99769ee73",
            "version": "KqlParameterItem/1.0",
            "name": "adxDatabase",
            "label": "",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "value": ""
          },
          {
            "id": "f55b454b-c7e4-4b6f-a21e-f2b816916d05",
            "version": "KqlParameterItem/1.0",
            "name": "timeRange",
            "type": 4,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ],
              "allowCustom": true
            },
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "2ddbde9e-89ff-4dd4-be8f-bd1ed5208af9",
            "version": "KqlParameterItem/1.0",
            "name": "targetType",
            "type": 1,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "value": ""
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "parameters"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"union withsource=ingestion_table_name\\r\\n{targetType}_*\\r\\n| project ingestion_table_name,\\r\\n          sample_time_utc = column_ifexists(\\\"sample_time_utc\\\", datetime(\\\"1900-01-01\\\")),\\r\\n          collection_time_utc = column_ifexists(\\\"collection_time_utc\\\", datetime(\\\"1900-01-01\\\")),\\r\\n          probe_time_utc = column_ifexists(\\\"probe_time_utc\\\", datetime(\\\"1900-01-01\\\"))\\r\\n| where not (sample_time_utc == datetime(\\\"1900-01-01\\\") and collection_time_utc == datetime(\\\"1900-01-01\\\"))\\r\\n        and\\r\\n        isnotnull(ingestion_time())\\r\\n| extend collection_time_utc = case(\\r\\n                                   ingestion_table_name startswith \\\"{targetType}_\\\"\\r\\n                                   and\\r\\n                                   (\\r\\n                                    ingestion_table_name endswith \\\"_change_processing\\\"\\r\\n                                    or\\r\\n                                    ingestion_table_name endswith \\\"_change_processing_errors\\\"\\r\\n                                    or\\r\\n                                    ingestion_table_name endswith \\\"_database_properties\\\"\\r\\n                                    or\\r\\n                                    ingestion_table_name endswith \\\"_database_storage_utilization\\\"\\r\\n                                    or\\r\\n                                    ingestion_table_name endswith \\\"_sql_backup_history\\\"\\r\\n                                    or\\r\\n                                    ingestion_table_name endswith \\\"_sqlagent_job_history\\\"\\r\\n                                    or\\r\\n                                    ingestion_table_name endswith \\\"_table_metadata\\\"\\r\\n                                    or\\r\\n                                    ingestion_table_name endswith \\\"_query_runtime_stats\\\"\\r\\n                                    or\\r\\n                                    ingestion_table_name endswith \\\"_query_wait_stats\\\"\\r\\n                                   ),\\r\\n                                   collection_time_utc,\\r\\n                                   ingestion_table_name startswith \\\"{targetType}_\\\"\\r\\n                                   and\\r\\n                                   (\\r\\n                                    ingestion_table_name endswith \\\"_active_sessions\\\"\\r\\n                                    or\\r\\n                                    ingestion_table_name endswith \\\"_cpu_utilization\\\"\\r\\n                                    or\\r\\n                                    ingestion_table_name endswith \\\"_database_replicas\\\"\\r\\n                                    or\\r\\n                                    ingestion_table_name endswith \\\"_health_diagnostics\\\"\\r\\n                                    or\\r\\n                                    ingestion_table_name endswith \\\"_memory_utilization\\\"\\r\\n                                    or\\r\\n                                    ingestion_table_name endswith \\\"_performance_counters_common\\\"\\r\\n                                    or\\r\\n                                    ingestion_table_name endswith \\\"_performance_counters_detailed\\\"\\r\\n                                    or\\r\\n                                    ingestion_table_name endswith \\\"_properties\\\"\\r\\n                                    or\\r\\n                                    ingestion_table_name endswith \\\"_sqlagent_job_state\\\"\\r\\n                                    or\\r\\n                                    ingestion_table_name endswith \\\"_storage_io\\\"\\r\\n                                    or\\r\\n                                    ingestion_table_name endswith \\\"_volume_storage_utilization\\\"\\r\\n                                    or\\r\\n                                    ingestion_table_name endswith \\\"_wait_stats\\\"\\r\\n                                   ),\\r\\n                                   sample_time_utc,\\r\\n                                   ingestion_table_name startswith \\\"{targetType}_\\\"\\r\\n                                   and\\r\\n                                   ingestion_table_name endswith \\\"_connectivity\\\",\\r\\n                                   probe_time_utc,\\r\\n                                   datetime(null)\\r\\n                                   )\\r\\n| project-away sample_time_utc\\r\\n| where collection_time_utc between ({timeRange:start} .. {timeRange:end})\\r\\n| extend latency_ms = max_of(datetime_diff(\\\"millisecond\\\", ingestion_time(), collection_time_utc), 0)\\r\\n| summarize p90_latency_ms = percentile(latency_ms, 90),\\r\\n            min_latency_ms = min(latency_ms),\\r\\n            avg_latency_ms = avg(latency_ms),\\r\\n            max_latency_ms = max(latency_ms),\\r\\n            ingested_rows = count(),\\r\\n            ingested_samples = dcount(collection_time_utc)\\r\\n            by ingestion_table_name, grouper = \\\"All tables\\\"\\r\\n| order by ingestion_table_name asc\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
        "size": 2,
        "queryType": 9,
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "40ch"
              }
            },
            {
              "columnMatch": "Table",
              "formatter": 1,
              "formatOptions": {
                "customColumnWidthSetting": "40ch"
              }
            },
            {
              "columnMatch": "ingestion_table_name",
              "formatter": 5
            },
            {
              "columnMatch": "grouper",
              "formatter": 5
            },
            {
              "columnMatch": "p90_latency_ms",
              "formatter": 8,
              "formatOptions": {
                "palette": "orange",
                "aggregation": "Average"
              },
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal",
                  "useGrouping": true,
                  "maximumFractionDigits": 2
                }
              },
              "tooltipFormat": {
                "tooltip": "The time from collection to ingestion, at 90th percentile for the selected time range"
              }
            },
            {
              "columnMatch": "min_latency_ms",
              "formatter": 8,
              "formatOptions": {
                "palette": "blue",
                "aggregation": "Min"
              },
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal",
                  "useGrouping": true,
                  "maximumFractionDigits": 2
                }
              }
            },
            {
              "columnMatch": "avg_latency_ms",
              "formatter": 8,
              "formatOptions": {
                "palette": "purple",
                "aggregation": "Average",
                "customColumnWidthSetting": "10ch"
              },
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal",
                  "useGrouping": true,
                  "maximumFractionDigits": 2
                }
              }
            },
            {
              "columnMatch": "max_latency_ms",
              "formatter": 8,
              "formatOptions": {
                "palette": "yellow",
                "aggregation": "Max"
              },
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal",
                  "useGrouping": true,
                  "maximumFractionDigits": 2
                }
              }
            },
            {
              "columnMatch": "ingested_rows",
              "formatter": 0,
              "formatOptions": {
                "aggregation": "Sum"
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "useGrouping": true
                }
              }
            },
            {
              "columnMatch": "ingested_samples",
              "formatter": 0,
              "formatOptions": {
                "aggregation": "Sum"
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "useGrouping": true
                }
              },
              "tooltipFormat": {
                "tooltip": "A sample is the result set of a data collection query; depending on the dataset, it may include multiple rows"
              }
            },
            {
              "columnMatch": "$gen_group",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "40ch"
              }
            },
            {
              "columnMatch": "Group",
              "formatter": 1
            }
          ],
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "grouper"
            ],
            "expandTopLevel": true,
            "finalBy": "ingestion_table_name"
          },
          "labelSettings": [
            {
              "columnId": "grouper",
              "label": "Table"
            },
            {
              "columnId": "p90_latency_ms",
              "label": "P90"
            },
            {
              "columnId": "min_latency_ms",
              "label": "Min"
            },
            {
              "columnId": "avg_latency_ms",
              "label": "Avg"
            },
            {
              "columnId": "max_latency_ms",
              "label": "Max"
            },
            {
              "columnId": "ingested_rows",
              "label": "Rows"
            },
            {
              "columnId": "ingested_samples",
              "label": "Samples"
            }
          ]
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "timeRange",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "targetType",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "ingestion_summary"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}